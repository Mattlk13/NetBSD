# Makefile for RPI2 image.

ARCH=earmv7hf

PKG_PATH=ftp://ftp.netbsd.org/pub/NetBSD/misc/jun/raspberry-pi/${ARCH}/2017-11-10/

# iso file information
IMAGE=/usr/release/images/NetBSD-8.99.5-evbarm-${ARCH}-201711070200Z.iso

PKGSRC=../../../pkgsrc/pkgsrc-2015-05-30.tar.gz 

###

# set image file name
FILE=`date +%Y-%m-%d`-netbsd-armv7-${ARCH}.img
FILE_TMP=a.img

# extract sets.
SETS=${MNT_CDROM}/evbarm/binary/sets
RPI=${MNT_CDROM}/evbarm/binary/gzimg/armv7.img

KERNELBIN7=${MNT_CDROM}/evbarm/binary/kernel/netbsd-RPI2.bin.gz
KERNEL7=${MNT_CDROM}/evbarm/binary/kernel/netbsd-RPI2.gz

#LIST=man misc modules tests text xbase xcomp xetc xfont xserver
LIST=man modules xbase xcomp xetc xfont xserver 

# mount point
MNT=/mnt
VND=vnd0

MNT_CDROM=/mnt1
VND_CDROM=vnd1

MNT_TMP=/mnt2
VND_TMP=vnd2

all: file cdmount rpi extract cdunmount fit

# extract sets to image file.
extract:
	echo extract sets.
	vnconfig ${VND} ${FILE}
	fsck -fy /dev/r${VND}a
	mount /dev/${VND}a ${MNT}
	for i in ${LIST} ; do (tar xzpf ${SETS}/$${i}.tgz -C ${MNT};); done
#	echo extract pkgsrc.
#	tar xzpf ${PKGSRC} -C ${MNT}/usr
	echo extract netwalker kernel.
	mount_msdos /dev/${VND}e ${MNT}/boot
	umount ${MNT}/boot
	umount ${MNT}
	vnconfig -u ${VND}

# copy armv7.img.gz to image file and resize partition.
rpi:
	echo Copy armv7.img.gz
	vnconfig ${VND} ${FILE}
	fdisk -uf -0 -s 6/8192/188416 ${VND} #DOS id6 partition:DISKLABEL.proto
	fdisk -uf -1 -s 169/458752/4251648 ${VND}
	disklabel -DR ${VND} DISKLABEL.proto
	# newfs dos and ffs
	newfs -n 500000 -b 4096 /dev/r${VND}a
	newfs_msdos  /dev/r${VND}e
	# unzip original image
	gunzip < ${RPI}.gz > ${FILE_TMP}
	vnconfig ${VND_TMP} ${FILE_TMP}
	# restore ffs
	mount /dev/${VND}a ${MNT}
	dump 0uf - /dev/r${VND_TMP}a | ( cd ${MNT} ; restore -xf - )
	umount ${MNT}
	# restore msdos
	mount_msdos /dev/${VND}e ${MNT}
	mount_msdos /dev/${VND_TMP}e ${MNT_TMP}
	(cd ${MNT_TMP}; cp -pr . ${MNT})

	umount ${MNT_TMP}
	vnconfig -u ${VND_TMP}

	umount ${MNT}
	vnconfig -u ${VND}

# make image file. 512*3813376=2GB
file: 
	echo Create ${FILE}.
	dd if=/dev/zero of=${FILE} bs=512 count=4710400 progress=60000
	sleep 3

# stop sshd for package install
pkg:
	vnconfig ${VND} ${FILE}
	fsck /dev/r${VND}a
	mount /dev/${VND}a ${MNT}
	echo rc_configured=YES  >> ${MNT}/etc/rc.conf
	echo sshd=NO            >> ${MNT}/etc/rc.conf
	echo syslogd=NO         >> ${MNT}/etc/rc.conf
#	echo dhcpcd=NO          >> ${MNT}/etc/rc.conf
	echo resize_disklabel=NO        >> ${MNT}/etc/rc.conf
	echo resize_disklabel_disk=""   >> ${MNT}/etc/rc.conf
	echo resize_disklabel_part=""   >> ${MNT}/etc/rc.conf
	echo resize_root=NO             >> ${MNT}/etc/rc.conf
	echo resize_root_flags=""       >> ${MNT}/etc/rc.conf
	echo resize_root_postcmd=""     >> ${MNT}/etc/rc.conf
	umount ${MNT}
	vnconfig -u ${VND}


pkg-back:
	vnconfig ${VND} ${FILE}
	fsck /dev/r${VND}a
	mount /dev/${VND}a ${MNT}
	cp ../etc/rc.conf ${MNT}/etc/rc.conf
	umount ${MNT}
	vnconfig -u ${VND}

# copy default setupfile
release:
	vnconfig ${VND} ${FILE}
	fsck /dev/r${VND}a
	mount /dev/${VND}a ${MNT}
	mount /dev/${VND}e ${MNT}/boot
	(cd ..; tar cf - etc root ) |(cd ${MNT};tar xvf -)
	(cd ../boot;cp * ${MNT}/boot)
	echo "PKG_PATH=${PKG_PATH}" >> ${MNT}/etc/pkg_install.conf 
	umount ${MNT}/boot
	umount ${MNT}
	vnconfig -u ${VND}

# clean logfiles
logclean:
	vnconfig ${VND} ${FILE}
	fsck /dev/r${VND}a
	mount /dev/${VND}a ${MNT}
	rm -f ${MNT}/var/run/dmesg.boot
	rm -f ${MNT}/var/log/lastlogx 
#	rm -f ${MNT}/var/log/maillog 
	rm -f ${MNT}/var/log/maillog.0.gz 
	rm -f ${MNT}/var/log/wtmpx
	rm -f ${MNT}/var/log/wtmpx.0.gz
	rm -f ${MNT}/var/log/wtmp.0.gz
	rm -f ${MNT}/var/mail/root
	rm -f ${MNT}/var/db/dhcpcd-usmsc0.lease
	rm -f ${MNT}/var/db/dhcpcd-usmsc0.lease6
	rm -f ${MNT}/var/db/dhcpcd-url0.lease
	rm -f ${MNT}/var/db/dhcpcd-url0.lease6
	rm -f ${MNT}/root/dmesg
	rm -f ${MNT}/root/pkginfo
	rm -rf ${MNT}/var/run/dhcpcd
	rm -rf ${MNT}/var/run/resolvconf
	umount ${MNT}
	vnconfig -u ${VND}

# mount cdrom image
cdmount:
	echo mount cdrom image.
	vnconfig ${VND_CDROM} ${IMAGE}
	mount_cd9660 /dev/${VND_CDROM}a ${MNT_CDROM}

# unmount cdrom image
cdunmount:
	echo mount cdrom image.
	umount ${MNT_CDROM}
	vnconfig -u ${VND_CDROM}

# copy newer firmware to /boot on MSDOS partition
# https://github.com/raspberrypi/firmware
firm:
	vnconfig ${VND} ${FILE}
	mount_msdos /dev/${VND}e ${MNT}
	cp -r /usr/local/NetBSD/RPI/Firmware/firmware/boot/* /mnt
	umount ${MNT}
	vnconfig -u ${VND}

kernel:
	vnconfig ${VND} ${FILE}
	mount_msdos /dev/${VND}e ${MNT}
	gunzip < ${KERNELBIN7} > ${MNT}/kernel7.img
	umount ${MNT}
	mount /dev/${VND}a ${MNT}
	gunzip < ${KERNEL7} > ${MNT}/netbsd
	umount ${MNT}
	vnconfig -u ${VND}

# update pkgsrc
pkgsrc-update:
	vnconfig ${VND} ${FILE}
	fsck /dev/r${VND}a
	mount /dev/${VND}a ${MNT}
	(cd ${MNT}/usr/pkgsrc;cvs update -PAd)
	umount ${MNT}
	vnconfig -u ${VND}

# fetch newest isofileimage
fetch:
	./NewestISO |tee Fetch
	sh Fetch
	rm Fetch

# more space with newfs -b 4096
fit:
	cp ${FILE} ${FILE_TMP}
	vnconfig ${VND_TMP} ${FILE_TMP}
	newfs -n 500000 -b 4096 /dev/r${VND_TMP}a
	mount /dev/${VND_TMP}a ${MNT}
	vnconfig ${VND} ${FILE}
	dump 0uf - /dev/r${VND}a | ( cd ${MNT} ; restore -xf - )
	umount ${MNT}
	vnconfig -u ${VND}
	vnconfig -u ${VND_TMP}
	mv ${FILE_TMP} ${FILE}
